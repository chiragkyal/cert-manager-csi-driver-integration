apiVersion: v1
kind: Namespace
metadata:
  name: sandbox
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-issuer-sa
  namespace: sandbox
---
# Give cert-manager permission to request serviceaccounts token from the ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: issue-vault-issuer-sa-token
  namespace: sandbox
rules:
  - apiGroups: [""]
    resources: ["serviceaccounts/token"]
    resourceNames: ["vault-issuer-sa"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: issue-vault-issuer-sa-token
  namespace: sandbox
subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: issue-vault-issuer-sa-token
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: vault-issuer
  namespace: sandbox
spec:
  vault:
    path: pki/sign/example-dot-com # it should match with vault policy path (002-enable-pki.sh)
    server: http://vault.vault.svc.cluster.local:8200
    auth:
      kubernetes:
        role: vault-issuer-role # it should match the vault role name (003-enable-kube-auth.sh)
        mountPath: /v1/auth/kubernetes
        serviceAccountRef:
          name: vault-issuer-sa
